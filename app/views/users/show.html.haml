
- content_for :subtabs do
  .navtitle
    &= @user.name
  = shapado_auto_link(@user.bio)
  %hr

- content_for :sidebar do
  .follow-info.block
    - if current_user != @user
      - if logged_in? && current_user.following?(@user)
        = link_to t("followable.unfollow"), unfollow_user_path(@user), :class => "unfollow_link", 'data-class' => "follow_link", 'data-title' => t("followable.follow"), 'data-undo' => follow_user_path(@user)
      - else
        = link_to t("followable.follow"), follow_user_path(@user), :class => "follow_link", 'data-class' => "unfollow_link", 'data-title' => t("followable.unfollow"), 'data-undo' => unfollow_user_path(@user)

  .user-info.block
    = avatar_for(@user, :size => 128) 
    %br
    - if @user.facebook_account
      = link_to image_tag("facebook.gif"), 'http://www.facebook.com/' + @user.facebook_account.user_info["nickname"]
    - if @user.twitter_account
      = link_to image_tag("twitter.gif"), 'http://twitter.com/' + @user.twitter_account.user_info["nickname"]
    = shapado_auto_link(markdown(@user.description))

  -# Followers
  - if @user.followers.count > 0
    .block.followers
      %h2.title.count
        = t('followable.followers', :count => @user.followers.count)
      .friend_list
        - cache("user_followers_#{@user.id}_#{@user.followers.count}") do
          - @user.followers.each do |follower|
            %span{"data-user-id" => follower.id}
              = link_to avatar_for(follower, :size => 24).html_safe, user_path(follower)

  -# Followed users
  - if @user.following.count > 0
    .block
      %h2.title
        = t('followable.following', :count => @user.following.count)
      .friend_list
        - cache("user_following_#{@user.id}_#{@user.following.count}") do
          - @user.following.each do |follower|
            %span
              = link_to avatar_for(follower, :size => 24).html_safe, user_path(follower)

  -# Followed topics
  - if @topics.count == 0
    %h2.title
      = t("followable.topics.none")
  - else
    .block
      %h2.title
        = t("followable.topics", :count => @topics.count)
      - cache("user_topics_#{@user.id}_#{@topics.count}", :expires_in => 2.hours) do
        %ul.topic-list
          - @topics.each do |topic|
            %li
              .topic
                %span.topic-title
                  = link_to topic.title, topic_url(topic), :title => topic.title
              = render :partial => "topics/follow", :locals => {:topic => topic}
              .clear

#users_show
  .secondary-navigation{:class => @q_sort||"votes"}
    .navtitle
      %span.counter
        = number_with_delimiter(@questions.total_entries)
      = t(:question_count, :scope => "activerecord.models", :count => @questions.total_entries)
    %ul
      %li.newest
        = link_to t("questions.index.newest"), user_path(@user, :q_sort=>"newest"), :rel => "nofollow"
      %li.oldest
        = link_to t("questions.index.oldest"), user_path(@user, :q_sort=>"oldest"), :rel => "nofollow"
      %li.views
        = link_to t("activerecord.attributes.question.views"), user_path(@user, :q_sort=>"views"), :rel => "nofollow"
      %li.votes
        = link_to t("questions.index.votes"), user_path(@user, :q_sort=>"votes"), :rel => "nofollow"
    .clear
  .block
    %ul.items#questions
      - cache("user_questions_#{@user.id}_#{@questions.total_entries}") do
        - @questions.each do |question|
          = render :partial => "questions/question", :object => question
      .additional_info
        = will_paginate @questions, :param_name => "questions_page"
        .clear

  / Favorites
  .secondary-navigation{:class => @f_sort||"votes"}
    .navtitle
      %span.counter
        = number_with_delimiter(@favorites.total_entries)
      = t(:favorites, :scope => "activerecord.models")
    %ul
      %li.newest
        = link_to t("questions.index.newest"), user_path(@user, :f_sort=>"newest"), :rel => "nofollow"
      %li.oldest
        = link_to t("questions.index.oldest"), user_path(@user, :f_sort=>"oldest"), :rel => "nofollow"
      %li.views
        = link_to t("activerecord.attributes.question.views"), user_path(@user, :f_sort=>"views"), :rel => "nofollow"
      %li.votes
        = link_to t("questions.index.votes"), user_path(@user, :f_sort=>"votes"), :rel => "nofollow"
    .clear
  .block

  %ul.items#questions
    - @favorite_questions.each do |question|
      = render :partial => "questions/question", :object => question
  .additional_info
    = will_paginate @favorites, :param_name => "favorites_page"
    .clear

  / Answers
  .secondary-navigation{:class => @a_sort||"votes"}
    .navtitle
      %span.counter
        = number_with_delimiter(@answers.total_entries)
      = t(:answers, :scope => "activerecord.models")

    %ul
      %li.newest
        = link_to t("questions.index.newest"), user_path(@user, :a_sort=>"newest"), :rel => "nofollow"
      %li.oldest
        = link_to t("questions.index.oldest"), user_path(@user, :a_sort=>"oldest"), :rel => "nofollow"
      %li.votes
        = link_to t("questions.index.votes"), user_path(@user, :a_sort=>"votes"), :rel => "nofollow"
    .clear
  .block

  %ul.items#answers
    - cache("user_answers_#{@user.id}_#{@questions.total_entries}") do
      - @answers.each do |answer|
        - next if answer.question.banned
        = render :partial => "answers/answer", :object => answer
    .additional_info
      = will_paginate @answers, :param_name => "answers_page"
      .clear
