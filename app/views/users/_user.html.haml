- suggestion ||= false
%li.item
  / User Summary
  .summary
    - if suggestion
      .controls
        - if suggestion == 'self'
          .refuse-suggestion
            = link_to '✕',
              refuse_suggestion_path(:topic => @topic.id, :format => :js),
              :method => :post, :remote => true, "data-type" => "json"
        - else
          .delete-suggestion
            = link_to '✕',
              delete_suggestion_path(:topic => @topic.id,
                                     :user => user.id,
                                     :format => :js),
              :method => :post, :remote => true, 'data-type" => "json"

    .avatar
      = link_to avatar_for(user, :size => 96).html_safe, user_path(user)

      %p
        = link_to h(user.name), user_path(user)
    .info
      %input.user_id{ :type => :hidden, :id => user.id }
      .bio
        = auto_link(truncate_words(h(user.bio), 200, link_to('…', user_path(user))))
      - if suggestion
        .suggestion-info
          - if suggestion == 'self'
            &= t("user_suggestions.user_suggest.suggestion_box.self_html", :origin => link_to(h(origins.first.first_name), user_path(origins.first.id)), :count => origins.count-1)
          - else
            &= t("user_suggestions.user_suggest.suggestion_box.friend")
      .metadata
        = t(:created_at, :scope => "activerecord.attributes.user")
        = t("time.ago", :time => time_ago_in_words(user.created_at))
        \|
        / User Stats
        - count = user.questions.count(:group_id => current_group.id, :banned => false)
        = format_number(count)
        = t(:question_count, :scope => "activerecord.models", :count => count)
        \|
        - count = user.answers.count(:group_id => current_group.id, :banned => false)
        = format_number(count)
        = t(:answer_count, :scope => "activerecord.models", :count => count)
    .clear
