- title = h(question.title)
- if question.closed
  - title += " [#{t("closed", :scope => "activerecord.attributes.question").upcase}]"

- if !local_assigns[:mini]
  - owner = nil
  - if question.last_target.present?
    - last_target = question.last_target
    - if last_target.respond_to?(:updated_by) && last_target.updated_by.present?
      - owner= last_target.updated_by
    - else
      - owner= last_target.user
  - else
    - last_target = question
    - owner = question.user

  %li.entry.item{:class => class_for_question(question)}
    / Question Stats
    .stats
      .box.answers{:class => class_for_question(question), :title => question.accepted ? t(".accepted_tooltip") : "" }
        .counter
          = format_number(question.answers_count)
        .text
          = t(:answers, :scope => "activerecord.attributes.question")
    / Question Summary
    .summary
      - cache("question_on_index_#{question.id}") do
        %h3= link_to title, question_path(question), :title => truncate(strip_tags(question.body), :length => 200)
        .tag-list
          - question.first_tags.each do |tag|
            %span.tag{:class => "tag_#{h(tag)}"}
              = link_to h(tag), url_for(:controller => "questions", :action => "index", :tags => tag), :rel => "tag", :title => t("questions.tags.tooltip", :tag => tag)

      .time_ago
        = t("time.ago", :time => time_ago_in_words(last_target.updated_at))
    .clear
- else
  - cache("mini_question_on_index_#{question.id}") do
    %li.item{:class => "#{class_for_question(question)} #{local_assigns[:lite] ? 'lite' : ''}"}
      .stats
        .box.answers{:class => question.accepted ? "accepted" : "" }
          .counter
            = format_number(question.answers_count)
          - if !local_assigns[:lite]
            .text
              = t(:answers, :scope => "activerecord.attributes.question")
      .summary
        %h3
          = link_to title, question_path(question)
      .clear
