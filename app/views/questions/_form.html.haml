= include_javascripts :content_edit, :show_question
= f.error_messages
.group
  = f.label :title, "#{t(:title, :scope => "activerecord.attributes.question")}*", :class => "label"
  = f.text_field :title, :class => "text_field"
  .description
    = current_group.question_prompt

#question-details{:style => @question.new? ? "display: none;" : ""}
  .group
    = f.label :body, t("questions.form.details"), :class => "label"
    = f.text_area :body, :class => "editor-input", :id => "question-input", :rows => "auto", :cols => "auto"
    #preview-command
      %label.label
        = t("global.preview")
      #view
        = "(#{link_to t("global.enable"), "#", :class => "show_preview_answer"})"
      #hide
        = "(#{link_to t("global.disable"), "#", :class => "hide_preview_answer"})"
    #preview-area.markdown

  - if topics
    %hr
    .group
      = render :partial => "shared/classify", :locals => {:classifiable => @question, :ajax_add => false}

- if @question.new?
  .controls
    = link_to t("questions.new.add_details"), "#", :id => "show-details"

- if current_group.language.nil? && AppConfig.enable_i18n
  .group
    = f.label :language, t(:language, :scope => "activerecord.attributes.question"), :class => "label"
    - lang = @question.new? ? current_user.main_language : @question.language
    = f.select :language, languages_options(current_user.preferred_languages), {:selected => lang}, :class => "select"
    .description
      = t(".language_tip")
- else
  = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)

- if current_group.has_adult_content
  .group
    = f.check_box :adult_content, :class => "checkbox"
    = f.label :adult_content, t(".adult_content"), :class => "radio"

- if !@question.new?
  .group
    = f.label :version_message, t("wiki.model.attributes.message"), :class => "label"
    = f.text_field :version_message, :class => "text_field"
= f.hidden_field :parent_question_id
